apiVersion: ensemble.flux-framework.org/v1alpha1
kind: Ensemble
metadata:
  name: ensemble
spec:  
  members:

    # This is how you change the sidcar image, if needed. This is the one
    # that I push and use for development. Pull always ensures we get latest
  - sidecar:
      pullAlways: true
      image: ghcr.io/converged-computing/ensemble-operator-api:rockylinux9-test

    # Algorithm and options:
    # This is the algorithm run by the operator. The options are passed to
    # the running queue to further alter the outcome.
    # terminateChecks says to terminate after 2 subsequent inactive status checks
    algorithm:
      name: workload-demand
      options:
        terminateChecks: 2
        scaleUpChecks: 1
        order: "ascending"
        disableTermination: "yes"

    jobs:
      - name: lammps-2
        command: lmp -v x 2 -v y 2 -v z 2 -in in.reaxc.hns -nocite
        count: 3
        nodes: 2
        tasks: 6
      - name: lammps-4
        command: lmp -v x 2 -v y 2 -v z 2 -in in.reaxc.hns -nocite
        count: 3
        nodes: 4
        tasks: 12

    minicluster:
      spec:
        size: 1
        minSize: 1
        maxSize: 6 
        
        # The workers should not fail when they clean up
        flux:
          completeWorkers: true
        
        # This is a list because a pod can support multiple containers
        containers:
        - image: ghcr.io/converged-computing/metric-lammps:latest

          # You can set the working directory if your container WORKDIR is not correct.
          workingDir: /opt/lammps/examples/reaxff/HNS
          resources:
            limits:
              cpu: 3
            requests:
              cpu: 3
