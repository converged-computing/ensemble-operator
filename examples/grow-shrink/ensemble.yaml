apiVersion: ensemble.flux-framework.org/v1alpha1
kind: Ensemble
metadata:
  name: ensemble
spec:  

  # This is how you change the sidcar image, if needed. This is the one
  # that I push and use for development. Pull always ensures we get latest
  sidecar:
    imagePullPolicy: Never
    image: ghcr.io/converged-computing/ensemble-python:latest

  members:

   # The MiniCluster that will run the ensemble
  - minicluster:
      spec:
        size: 1
        minSize: 1
        maxSize: 16

        # uncomment to make interactive and debug
        # interactive: true

        # The workers should not fail when they clean up
        flux:
          completeWorkers: true
        
        # This is a list because a pod can support multiple containers
        containers:
        - image: ghcr.io/converged-computing/metric-lammps:latest

          # You can set the working directory if your container WORKDIR is not correct.
          workingDir: /opt/lammps/examples/reaxff/HNS
          resources:
            limits:
              cpu: 3
            requests:
              cpu: 3

    # The ensemble configuration file (what is provided to ensemble python)
    ensemble: |
      logging:
        debug: false
        heartbeat: 3

      jobs:
        - name: sleep
          command: sleep 10
          count: 1
          nodes: 1

        - name: echo
          command: echo hello world
          count: 5
          nodes: 1

        # This is explicitly set to a long time so we have to scale
        # Since it's submit on each finish of echo, we will have 10 runs
        - name: sleep-long
          command: sleep 100
          count: 2
          nodes: 1

      rules:
        # 1. This rule says to submit the sleep jobs when we start
        - trigger: start
          action:
            name: submit
            label: sleep

        - trigger: metric
          name: count.sleep.success
          when: 1
          action:
            name: submit
            label: echo

        # When we have a successful echo job, submit a long sleep
        # Do this 5 times (repetitions), otherwise it will just run once
        - trigger: job-finish
          name: echo
          action:
            name: submit
            label: sleep-long
            repetitions: 5

        # When the pending time of sleep is > 5 seconds, grow the cluster.
        # The default "value" here is 1 (to grow by), but we allow grow to 
        # happen 3 times.
        - trigger: metric
          name: mean.sleep-long-pending
          when: "> 5"
          action:
            name: grow
            repetitions: 5
            backoff: 2

        # Terminate the ensemble when we have 10 successful long sleep runs
        - trigger: metric
          name: count.sleep-long.success
          when: 10
          action:
            name: terminate